server:
  port: 9999
  servlet:
    context-path: /${model.modelName}
  # 开启https,配置跟证书对应
  ssl:
    enabled: false
    key-store: classpath:https.keystore
    key-store-type: JKS
    # 密码
    key-store-password: 123456
    key-password: 123456
    # 别名
    key-alias: ocean

logging:
  level:
    web: INFO

spring:
  application:
    name: ${model.modelName}
  profiles:
    active: dev
  servlet:
    multipart:
      enabled: true
      max-file-size: 1MB
      max-request-size: 1MB
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  devtools:
    restart:
      enabled: false
      additional-paths: src/main/java #重启目录
      exclude: WEB-INF/**
  jpa:
    hibernate:
      ddl-auto: update  # 第一次建表create  后面用update，要不然每次重启都会新建表
    open-in-view: false
    #数据库引擎
    database-platform: org.hibernate.dialect.MySQLDialect
    #数据库
    database: mysql
    #控制台打印jpa的执行sql
    show-sql: true
    #是否执行datasource.schema脚本
    generate-ddl: false
    properties:
      hibernate:
        format_sql: true
  datasource:
    #数据库地址
    url: jdbc:mysql://localhost:3306/cheer?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
    #数据库用户名
    username: root
    #数据库密码
    password: Root@12345
    #驱动类
    driver-class-name: com.mysql.cj.jdbc.Driver
    #数据源的类型
    type: com.zaxxer.hikari.HikariDataSource
    #数据库连接池hikari配置信息
    hikari:
      #此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      #最小空闲连接数量
      minimum-idle: 1
      #空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 60000
      #数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      #连接池母子
      pool-name: DatebookHikariCP
      #连接池最大连接数，默认是10
      maximum-pool-size: 5
  data:
    redis:
      repositories:
        enabled: false
      host: 127.0.0.1
      #Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: ''
      database: 5
      # 连接超时时间（毫秒）
      timeout: 30000
      client-type: LETTUCE
      lettuce:
        pool:
          # 连接池最大连接数（使用负值表示没有限制）
          max-active: 8
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1
          # 连接池中的最大空闲连接
          max-idle: 8
          # 连接池中的最小空闲连接
          min-idle: 1
  security:
    user:
      name: yihe
      password: 12345
  boot:
    admin:
      client:
        # spring boot admin server的注册地址,多个以逗号隔开,并把localhost换成ip
        url: http://localhost:5555

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

# ===== SpringDoc配置 =====#
springdoc:
  swagger-ui:
    # 自定义的文档界面访问路径。默认访问路径是/swagger-ui.html
    path: /doc.html
    # 字符串类型，一共三个值来控制操作和标记的默认展开设置。它可以是“list”（仅展开标记）、“full”（展开标记和操作）或“none”（不展开任何内容）。
    #    docExpansion: none
    # 布尔值。控制“试用”请求的请求持续时间（毫秒）的显示。
    #    displayRequestDuration: true
    # 布尔值。控制供应商扩展（x-）字段和操作、参数和架构值的显示。
    #    showExtensions: true
    # 布尔值。控制参数的扩展名（pattern、maxLength、minLength、maximum、minminimum）字段和值的显示。
    #    showCommonExtensions: true
    # 布尔值。禁用swagger用户界面默认petstore url。（从v1.4.1开始提供）。
  #    disable-swagger-default-url: true
  api-docs:
    # enabled the /v3/api-docs endpoint
    #    enabled: true
    # 自定义的文档api元数据访问路径。默认访问路径是/v3/api-docs
    path: /v3/api-docs
    #    version: OPENAPI_3_0
    # 布尔值。在@Schema（名称name、标题title和说明description，三个属性）上启用属性解析程序。
  #    resolve-schema-properties: true
  #  writer-with-default-pretty-printer: true
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: top.chsi
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_CN
    enable-swagger-models: true
    enable-document-manage: true

cheer:
  auth:
    enabled: true
    # token的过期时间 单位秒
    max-inactive-interval: 900
  monitor:
    enabled: false
  audit:
    enabled: false
